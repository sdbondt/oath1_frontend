import Head from 'next/head'
import { useDispatch, useSelector } from 'react-redux'
import AuthForm from '../components/AuthForm'
import styles from '../styles/Home.module.css'
import { useEffect } from 'react'
import { useState } from 'react'
import { authActions } from '../store/authReducer'

export default function Home() {
  const [userName, setUserName] = useState('')
  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)
  const token = useSelector(state => state.auth.token)
  const dispatch = useDispatch()
  
  useEffect(() => {
    const oldToken = JSON.parse(localStorage.getItem('token'))
    if (oldToken) {
      dispatch(authActions.setToken(oldToken))
      dispatch(authActions.login())
    }
  }, [])
  
  useEffect(() => {
    if (token && isAuthenticated) {
      const fetchProfile = async (url) => {
        const data = await fetch(url, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        })
        const dataJSON = await data.json()
        return dataJSON
      }
      fetchProfile('http://localhost:5000/api/v1/users/profile').then(data => {
      setUserName(data.data)
      })
    }
  }, [token, isAuthenticated])

  const logoutHandler = () => {
    dispatch(authActions.logout())
  }

  if (!isAuthenticated) {
    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  
        <main className={styles.main}>
          <div>
            <AuthForm />
          </div>
        </main>
  
      </div>
    )
  } else {
    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  
        <main className={styles.main}>
          <div>
            <p>{userName || 'jef'}</p><br />
            <button onClick={logoutHandler}>Logout</button>
          </div>
        </main>
  
      </div>
    )
  }

  
}
